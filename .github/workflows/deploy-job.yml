name: deploy-to-production
run-name: 'Deploy to production'

on:
  push:
    branches:
      - main

jobs:
  install-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
      - name: checkout shared code repo
        uses: actions/checkout@v3
        with:
          repository: Ready-Set-Dice/rsd-shared.git
          ref: 'main'
          path: '.shared'
      - name: setup the correct version of node
        uses: actions/setup-node@v3
        with:
          node-version: '18.2'
      - name: setup the environment variables
        run: |
          touch .env
          echo VUE_APP_PROD_API_KEY=${{ secrets.VUE_APP_PROD_API_KEY }} >> .env
          echo VUE_APP_PROD_AUTH_DOMAIN=${{ secrets.VUE_APP_PROD_AUTH_DOMAIN }} >> .env
          echo VUE_APP_PROD_DATABASE_URL=${{ secrets.VUE_APP_PROD_DATABASE_URL }} >> .env
          echo VUE_APP_PROD_PROJECT_ID=${{ secrets.VUE_APP_PROD_PROJECT_ID }} >> .env
          echo VUE_APP_PROD_STORAGE_BUCKET=${{ secrets.VUE_APP_PROD_STORAGE_BUCKET }} >> .env
          echo VUE_APP_PROD_MESSAGING_SENDER_ID=${{ secrets.VUE_APP_PROD_MESSAGING_SENDER_ID }} >> .env
          echo VUE_APP_PROD_APP_ID=${{ secrets.VUE_APP_PROD_APP_ID }} >> .env
          echo VUE_APP_PROD_ANALYTICS=${{ secrets.VUE_APP_PROD_ANALYTICS }} >> .env
          echo VUE_APP_DEV_API_KEY=${{ secrets.VUE_APP_DEV_API_KEY }} >> .env
          echo VUE_APP_DEV_AUTH_DOMAIN=${{ secrets.VUE_APP_DEV_AUTH_DOMAIN }} >> .env
          echo VUE_APP_DEV_DATABASE_URL=${{ secrets.VUE_APP_DEV_DATABASE_URL }} >> .env
          echo VUE_APP_DEV_STORAGE_BUCKET=${{ secrets.VUE_APP_DEV_STORAGE_BUCKET }} >> .env
          echo VUE_APP_DEV_MESSAGING_SENDER_ID=${{ secrets.VUE_APP_DEV_MESSAGING_SENDER_ID }} >> .env
          echo VUE_APP_DEV_APP_ID=${{ secrets.VUE_APP_DEV_APP_ID }} >> .env
          echo VUE_APP_DEV_ANALYTICS=${{ secrets.VUE_APP_DEV_ANALYTICS }} >> .env
      - name: npm install, build and test
        run: |
          npm ci
          npm run build --if-present
      - name: archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-and-server
          path: |
            backend
            dist
            pc.js
            package.json
            package-lock.json
  shutdown-and-remove:
    runs-on: ubuntu-latest
    steps:
      - name: stop and remove current pm2 instance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            pm2 stop pc
            pm2 delete pc
            rm -rf ~/rsd/pc
  deploy-job:
    runs-on: ubuntu-latest
    needs: [install-and-build, shutdown-and-remove]
    steps:
      - name: checkout current repo
        uses: actions/checkout@v3
      - name: retrieve artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-and-server
          path: pc
      - name: copy files to server via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          source: pc/*
          target: /home/${{ secrets.DEPLOY_USER }}/rsd/
      - name: restart pm2 service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.GITSERVICE_ED_SSH }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd ~/rsd/pc
            git clone git@github.com:Ready-Set-Dice/rsd-shared.git .shared
            npm install --omit=dev
            pm2 start pc.js
            pm2 save